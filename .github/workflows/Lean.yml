name: Build_Linux_op_5.15

on: 
  repository_dispatch:
  workflow_dispatch:

# 定时触发编译
#  schedule:
#    - cron: 3 17 * * 4

# 点赞☆Star触发编译
#  watch:
#    types: [started]

jobs:
  Build_Linux_op_515:
    runs-on: ubuntu-20.04
    steps:
    - name: Clone Repository
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo timedatectl set-timezone "Asia/Shanghai" 
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        df -h
        
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        cp -f ../lean_1.sh ./
        chmod +x ./lean_1.sh && ./lean_1.sh
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        cp -f ../lean_2.sh ./        
        chmod +x ./lean_2.sh && ./lean_2.sh
           
        sed -i "s/DISTRIB_DESCRIPTION='*.*'/DISTRIB_DESCRIPTION='Linux-OP5.15-$(date +%Y%m%d)'/g" package/lean/default-settings/files/zzz-default-settings
        
    - name: Configuration Customization - Build_Linux-op_515
      env:
        CONFIG_FILE: './lean.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Build firmware
      working-directory: ./openwrt
      run: |
        make -j$(nproc) V=s
    - name: Assemble Artifact
      id: assemble_artifact
      run: |
        rm -rf ./LinuxOp_Out
        mkdir -p ./LinuxOp_Out/
        
        getmd5()
        {
        md5sum=`md5sum $1`
        md5=`echo ${md5sum% *}`
        md5=`echo ${md5:0:10}`
        }
        
        rom=openwrt/bin/targets/x86/64/openwrt-x86-64-generic-squashfs-combined.img.gz
        getmd5 $rom
        cp -a $rom ./LinuxOp_Out/Linux-OP-5.15-$(date +%Y%m%d)_${md5}.img.gz
               
    - name: Upload Firmwares
      uses: actions/upload-artifact@main
      with:
        name: Linux-OP-5.15
        path: LinuxOp_Out/*.img.gz

    - name: Upload config
      uses: actions/upload-artifact@main
      with:
        name: lean.config
        path: openwrt/.config
                                 
    - name: Upload firmware to WeTransfer
      id: wetransfer
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${Linux-OP-5.15} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "::set-output name=url::$(cat wetransfer.log | grep https | cut -f3 -d" ")"

